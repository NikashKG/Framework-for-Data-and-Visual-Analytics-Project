<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0912.2314                               -->
<workbook original-version='18.1' source-build='2025.2.3 (20252.25.0912.2314)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tourist_processed+' inline='true' name='federated.11hj7ci09dd2to111nbgj0uop3yv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tourist_processed' name='textscan.0bj3rte1gqao0s10ebqzv1an1j72'>
            <connection class='textscan' directory='E:/FDVA/data/processed' filename='tourist_processed.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.0bj3rte1gqao0s10ebqzv1an1j72' name='tourist_processed.csv' table='[tourist_processed#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Report Type' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='string' name='Subcategory' ordinal='3' />
              <column datatype='string' name='Metric' ordinal='4' />
              <column datatype='real' name='1995' ordinal='5' />
              <column datatype='real' name='1996' ordinal='6' />
              <column datatype='real' name='1997' ordinal='7' />
              <column datatype='real' name='1998' ordinal='8' />
              <column datatype='real' name='1999' ordinal='9' />
              <column datatype='real' name='2000' ordinal='10' />
              <column datatype='real' name='2001' ordinal='11' />
              <column datatype='real' name='2002' ordinal='12' />
              <column datatype='real' name='2003' ordinal='13' />
              <column datatype='real' name='2004' ordinal='14' />
              <column datatype='real' name='2005' ordinal='15' />
              <column datatype='real' name='2006' ordinal='16' />
              <column datatype='real' name='2007' ordinal='17' />
              <column datatype='real' name='2008' ordinal='18' />
              <column datatype='real' name='2009' ordinal='19' />
              <column datatype='real' name='2010' ordinal='20' />
              <column datatype='real' name='2011' ordinal='21' />
              <column datatype='real' name='2012' ordinal='22' />
              <column datatype='real' name='2013' ordinal='23' />
              <column datatype='real' name='2014' ordinal='24' />
              <column datatype='real' name='2015' ordinal='25' />
              <column datatype='real' name='2016' ordinal='26' />
              <column datatype='real' name='2017' ordinal='27' />
              <column datatype='real' name='2018' ordinal='28' />
              <column datatype='real' name='2019' ordinal='29' />
              <column datatype='real' name='2020' ordinal='30' />
              <column datatype='real' name='2021' ordinal='31' />
              <column datatype='real' name='2022' ordinal='32' />
              <column datatype='real' name='Avg_Arrivals' ordinal='33' />
              <column datatype='real' name='Tourism_Intensity' ordinal='34' />
            </columns>
          </relation>
          <relation connection='textscan.0bj3rte1gqao0s10ebqzv1an1j72' name='cost_processed.csv' table='[cost_processed#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='real' name='Cost of Living Index' ordinal='1' />
              <column datatype='real' name='Rent Index' ordinal='2' />
              <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='3' />
              <column datatype='real' name='Groceries Index' ordinal='4' />
              <column datatype='real' name='Restaurant Price Index' ordinal='5' />
              <column datatype='real' name='Local Purchasing Power Index' ordinal='6' />
              <column datatype='real' name='Affordability_Index' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.0bj3rte1gqao0s10ebqzv1an1j72' name='festivals_processed.csv' table='[festivals_processed#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Festival_Name' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Month' ordinal='2' />
              <column datatype='real' name='Impact_Score' ordinal='3' />
              <column datatype='string' name='Category' ordinal='4' />
              <column datatype='real' name='Lat' ordinal='5' />
              <column datatype='real' name='Lon' ordinal='6' />
              <column datatype='string' name='Season' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[1995]' value='[tourist_processed.csv].[1995]' />
          <map key='[1996]' value='[tourist_processed.csv].[1996]' />
          <map key='[1997]' value='[tourist_processed.csv].[1997]' />
          <map key='[1998]' value='[tourist_processed.csv].[1998]' />
          <map key='[1999]' value='[tourist_processed.csv].[1999]' />
          <map key='[2000]' value='[tourist_processed.csv].[2000]' />
          <map key='[2001]' value='[tourist_processed.csv].[2001]' />
          <map key='[2002]' value='[tourist_processed.csv].[2002]' />
          <map key='[2003]' value='[tourist_processed.csv].[2003]' />
          <map key='[2004]' value='[tourist_processed.csv].[2004]' />
          <map key='[2005]' value='[tourist_processed.csv].[2005]' />
          <map key='[2006]' value='[tourist_processed.csv].[2006]' />
          <map key='[2007]' value='[tourist_processed.csv].[2007]' />
          <map key='[2008]' value='[tourist_processed.csv].[2008]' />
          <map key='[2009]' value='[tourist_processed.csv].[2009]' />
          <map key='[2010]' value='[tourist_processed.csv].[2010]' />
          <map key='[2011]' value='[tourist_processed.csv].[2011]' />
          <map key='[2012]' value='[tourist_processed.csv].[2012]' />
          <map key='[2013]' value='[tourist_processed.csv].[2013]' />
          <map key='[2014]' value='[tourist_processed.csv].[2014]' />
          <map key='[2015]' value='[tourist_processed.csv].[2015]' />
          <map key='[2016]' value='[tourist_processed.csv].[2016]' />
          <map key='[2017]' value='[tourist_processed.csv].[2017]' />
          <map key='[2018]' value='[tourist_processed.csv].[2018]' />
          <map key='[2019]' value='[tourist_processed.csv].[2019]' />
          <map key='[2020]' value='[tourist_processed.csv].[2020]' />
          <map key='[2021]' value='[tourist_processed.csv].[2021]' />
          <map key='[2022]' value='[tourist_processed.csv].[2022]' />
          <map key='[Affordability_Index]' value='[cost_processed.csv].[Affordability_Index]' />
          <map key='[Avg_Arrivals]' value='[tourist_processed.csv].[Avg_Arrivals]' />
          <map key='[Category (festivals_processed.csv)]' value='[festivals_processed.csv].[Category]' />
          <map key='[Category]' value='[tourist_processed.csv].[Category]' />
          <map key='[Cost of Living Index]' value='[cost_processed.csv].[Cost of Living Index]' />
          <map key='[Cost of Living Plus Rent Index]' value='[cost_processed.csv].[Cost of Living Plus Rent Index]' />
          <map key='[Country (cost_processed.csv)]' value='[cost_processed.csv].[Country]' />
          <map key='[Country (festivals_processed.csv)]' value='[festivals_processed.csv].[Country]' />
          <map key='[Country]' value='[tourist_processed.csv].[Country]' />
          <map key='[Festival_Name]' value='[festivals_processed.csv].[Festival_Name]' />
          <map key='[Groceries Index]' value='[cost_processed.csv].[Groceries Index]' />
          <map key='[Impact_Score]' value='[festivals_processed.csv].[Impact_Score]' />
          <map key='[Lat]' value='[festivals_processed.csv].[Lat]' />
          <map key='[Local Purchasing Power Index]' value='[cost_processed.csv].[Local Purchasing Power Index]' />
          <map key='[Lon]' value='[festivals_processed.csv].[Lon]' />
          <map key='[Metric]' value='[tourist_processed.csv].[Metric]' />
          <map key='[Month]' value='[festivals_processed.csv].[Month]' />
          <map key='[Rent Index]' value='[cost_processed.csv].[Rent Index]' />
          <map key='[Report Type]' value='[tourist_processed.csv].[Report Type]' />
          <map key='[Restaurant Price Index]' value='[cost_processed.csv].[Restaurant Price Index]' />
          <map key='[Season]' value='[festivals_processed.csv].[Season]' />
          <map key='[Subcategory]' value='[tourist_processed.csv].[Subcategory]' />
          <map key='[Tourism_Intensity]' value='[tourist_processed.csv].[Tourism_Intensity]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Report Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Report Type]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Report Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subcategory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Subcategory]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Subcategory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metric]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1995</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1995]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>1995</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1996</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1996]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>1996</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1997</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1997]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>1997</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1998</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1998]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>1998</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1999</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1999]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>1999</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2021</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2021]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2021</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2022</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2022]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>2022</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Arrivals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Arrivals]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Avg_Arrivals</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism_Intensity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tourism_Intensity]</local-name>
            <parent-name>[tourist_processed.csv]</parent-name>
            <remote-alias>Tourism_Intensity</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cost_processed.csv)]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Cost of Living Index</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Rent Index</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Plus Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Plus Rent Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Cost of Living Plus Rent Index</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Groceries Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Groceries Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Groceries Index</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant Price Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Restaurant Price Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Restaurant Price Index</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Purchasing Power Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Purchasing Power Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Local Purchasing Power Index</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affordability_Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Affordability_Index]</local-name>
            <parent-name>[cost_processed.csv]</parent-name>
            <remote-alias>Affordability_Index</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Festival_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Festival_Name]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Festival_Name</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (festivals_processed.csv)]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Impact_Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Impact_Score]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Impact_Score</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category (festivals_processed.csv)]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lon]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Lon</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[festivals_processed.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[festivals_processed.csv_05942E6609B54490BB3F920341752C89]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Affordability Index' datatype='real' name='[Affordability_Index]' role='measure' type='quantitative' />
      <column caption='Avg Arrivals' datatype='real' name='[Avg_Arrivals]' role='measure' type='quantitative' />
      <column caption='Category (festivals processed.csv)' datatype='string' name='[Category (festivals_processed.csv)]' role='dimension' type='nominal' />
      <column caption='Country (cost processed.csv)' datatype='string' name='[Country (cost_processed.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (festivals processed.csv)' datatype='string' name='[Country (festivals_processed.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Festival Name' datatype='string' name='[Festival_Name]' role='dimension' type='nominal' />
      <column caption='Impact Score' datatype='real' name='[Impact_Score]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Tourism Intensity' datatype='real' name='[Tourism_Intensity]' role='measure' type='quantitative' />
      <column caption='cost_processed.csv1' datatype='table' name='[__tableau_internal_object_id__].[cost_processed.csv_398487BE7CA84347B18C54CE8B745474]' role='measure' type='quantitative' />
      <column caption='festivals_processed.csv' datatype='table' name='[__tableau_internal_object_id__].[festivals_processed.csv_05942E6609B54490BB3F920341752C89]' role='measure' type='quantitative' />
      <column caption='tourist_processed.csv' datatype='table' name='[__tableau_internal_object_id__].[tourist_processed.csv_306149D589C64A6B813CC0537ECE056C]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='cost_processed.csv1' id='cost_processed.csv_398487BE7CA84347B18C54CE8B745474'>
            <properties context=''>
              <relation connection='textscan.0bj3rte1gqao0s10ebqzv1an1j72' name='cost_processed.csv' table='[cost_processed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='Cost of Living Index' ordinal='1' />
                  <column datatype='real' name='Rent Index' ordinal='2' />
                  <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='3' />
                  <column datatype='real' name='Groceries Index' ordinal='4' />
                  <column datatype='real' name='Restaurant Price Index' ordinal='5' />
                  <column datatype='real' name='Local Purchasing Power Index' ordinal='6' />
                  <column datatype='real' name='Affordability_Index' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='festivals_processed.csv' id='festivals_processed.csv_05942E6609B54490BB3F920341752C89'>
            <properties context=''>
              <relation connection='textscan.0bj3rte1gqao0s10ebqzv1an1j72' name='festivals_processed.csv' table='[festivals_processed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Festival_Name' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Month' ordinal='2' />
                  <column datatype='real' name='Impact_Score' ordinal='3' />
                  <column datatype='string' name='Category' ordinal='4' />
                  <column datatype='real' name='Lat' ordinal='5' />
                  <column datatype='real' name='Lon' ordinal='6' />
                  <column datatype='string' name='Season' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='tourist_processed.csv' id='tourist_processed.csv_306149D589C64A6B813CC0537ECE056C'>
            <properties context=''>
              <relation connection='textscan.0bj3rte1gqao0s10ebqzv1an1j72' name='tourist_processed.csv' table='[tourist_processed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Report Type' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='string' name='Subcategory' ordinal='3' />
                  <column datatype='string' name='Metric' ordinal='4' />
                  <column datatype='real' name='1995' ordinal='5' />
                  <column datatype='real' name='1996' ordinal='6' />
                  <column datatype='real' name='1997' ordinal='7' />
                  <column datatype='real' name='1998' ordinal='8' />
                  <column datatype='real' name='1999' ordinal='9' />
                  <column datatype='real' name='2000' ordinal='10' />
                  <column datatype='real' name='2001' ordinal='11' />
                  <column datatype='real' name='2002' ordinal='12' />
                  <column datatype='real' name='2003' ordinal='13' />
                  <column datatype='real' name='2004' ordinal='14' />
                  <column datatype='real' name='2005' ordinal='15' />
                  <column datatype='real' name='2006' ordinal='16' />
                  <column datatype='real' name='2007' ordinal='17' />
                  <column datatype='real' name='2008' ordinal='18' />
                  <column datatype='real' name='2009' ordinal='19' />
                  <column datatype='real' name='2010' ordinal='20' />
                  <column datatype='real' name='2011' ordinal='21' />
                  <column datatype='real' name='2012' ordinal='22' />
                  <column datatype='real' name='2013' ordinal='23' />
                  <column datatype='real' name='2014' ordinal='24' />
                  <column datatype='real' name='2015' ordinal='25' />
                  <column datatype='real' name='2016' ordinal='26' />
                  <column datatype='real' name='2017' ordinal='27' />
                  <column datatype='real' name='2018' ordinal='28' />
                  <column datatype='real' name='2019' ordinal='29' />
                  <column datatype='real' name='2020' ordinal='30' />
                  <column datatype='real' name='2021' ordinal='31' />
                  <column datatype='real' name='2022' ordinal='32' />
                  <column datatype='real' name='Avg_Arrivals' ordinal='33' />
                  <column datatype='real' name='Tourism_Intensity' ordinal='34' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (cost_processed.csv)]' />
            </expression>
            <first-end-point object-id='tourist_processed.csv_306149D589C64A6B813CC0537ECE056C' />
            <second-end-point object-id='cost_processed.csv_398487BE7CA84347B18C54CE8B745474' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country (cost_processed.csv)]' />
              <expression op='[Country (festivals_processed.csv)]' />
            </expression>
            <first-end-point object-id='cost_processed.csv_398487BE7CA84347B18C54CE8B745474' />
            <second-end-point object-id='festivals_processed.csv_05942E6609B54490BB3F920341752C89' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='tourist_processed+' name='federated.11hj7ci09dd2to111nbgj0uop3yv' />
          </datasources>
          <datasource-dependencies datasource='federated.11hj7ci09dd2to111nbgj0uop3yv'>
            <column caption='Affordability Index' datatype='real' name='[Affordability_Index]' role='measure' type='quantitative' />
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Groceries Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Affordability_Index]' derivation='Sum' name='[sum:Affordability_Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Groceries Index]' derivation='Sum' name='[sum:Groceries Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Affordability_Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Groceries Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Rent Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Restaurant Price Index:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;AFGHANISTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ALBANIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ALGERIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;AMERICAN SAMOA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ANDORRA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ANGOLA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ANGUILLA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ANTIGUA AND BARBUDA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ARGENTINA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ARMENIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ARUBA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;AUSTRALIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;AUSTRIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;AZERBAIJAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BAHAMAS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BAHRAIN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BANGLADESH&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BARBADOS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BELARUS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BELGIUM&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BELIZE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BENIN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BERMUDA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BHUTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BOLIVIA, PLURINATIONAL STATE OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BONAIRE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BOSNIA AND HERZEGOVINA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BOTSWANA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BRAZIL&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BRITISH VIRGIN ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BRUNEI DARUSSALAM&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BULGARIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BURKINA FASO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;BURUNDI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CABO VERDE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CAMBODIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CAMEROON&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CANADA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CAYMAN ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CENTRAL AFRICAN REPUBLIC&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CHAD&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CHILE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CHINA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;COLOMBIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;COMOROS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CONGO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CONGO, DEMOCRATIC REPUBLIC OF THE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;COOK ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;COSTA RICA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;COTE D´IVOIRE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CROATIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CUBA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CURAÇAO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CYPRUS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;CZECH REPUBLIC (CZECHIA)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;DENMARK&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;DJIBOUTI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;DOMINICA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;DOMINICAN REPUBLIC&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ECUADOR&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;EGYPT&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;EL SALVADOR&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;EQUATORIAL GUINEA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ERITREA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ESTONIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ESWATINI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ETHIOPIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;FIJI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;FINLAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;FRANCE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;FRENCH GUIANA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;FRENCH POLYNESIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GABON&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GAMBIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GEORGIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GERMANY&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GHANA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GREECE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GRENADA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GUADELOUPE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GUAM&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GUATEMALA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GUINEA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GUINEA-BISSAU&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;GUYANA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;HAITI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;HONDURAS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;HONG KONG, CHINA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;HUNGARY&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ICELAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;INDIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;INDONESIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;IRAN, ISLAMIC REPUBLIC OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;IRAQ&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;IRELAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ISRAEL&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ITALY&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;JAMAICA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;JAPAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;JORDAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KAZAKHSTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KENYA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KIRIBATI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KOREA, DEMOCRATIC PEOPLE´S REPUBLIC OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KOREA, REPUBLIC OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KUWAIT&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;KYRGYZSTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LAO PEOPLE´S DEMOCRATIC REPUBLIC&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LATVIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LEBANON&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LESOTHO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LIBERIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LIBYA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LIECHTENSTEIN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LITHUANIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;LUXEMBOURG&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MACAO, CHINA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MADAGASCAR&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MALAWI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MALAYSIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MALDIVES&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MALI&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MALTA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MARSHALL ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MARTINIQUE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MAURITANIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MAURITIUS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MEXICO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MICRONESIA, FEDERATED STATES OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MOLDOVA, REPUBLIC OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MONACO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MONGOLIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MONTENEGRO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MONTSERRAT&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MOROCCO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MOZAMBIQUE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;MYANMAR&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NAMIBIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NAURU&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NEPAL&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NETHERLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NEW CALEDONIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NEW ZEALAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NICARAGUA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NIGER&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NIGERIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NIUE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NORTH MACEDONIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NORTHERN MARIANA ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;NORWAY&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;OMAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PAKISTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PALAU&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PANAMA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PAPUA NEW GUINEA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PARAGUAY&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PERU&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PHILIPPINES&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;POLAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PORTUGAL&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;PUERTO RICO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;QATAR&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;REUNION&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ROMANIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;RUSSIAN FEDERATION&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;RWANDA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SABA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAINT KITTS AND NEVIS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAINT LUCIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAINT VINCENT AND THE GRENADINES&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAMOA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAN MARINO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAO TOME AND PRINCIPE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SAUDI ARABIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SENEGAL&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SERBIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SERBIA AND MONTENEGRO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SEYCHELLES&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SIERRA LEONE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SINGAPORE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SINT EUSTATIUS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SINT MAARTEN (DUTCH PART)&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SLOVAKIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SLOVENIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SOLOMON ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SOMALIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SOUTH AFRICA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SOUTH SUDAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SPAIN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SRI LANKA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;STATE OF PALESTINE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SUDAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SURINAME&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SWEDEN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SWITZERLAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;SYRIAN ARAB REPUBLIC&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TAIWAN PROVINCE OF CHINA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TAJIKISTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TANZANIA, UNITED REPUBLIC OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;THAILAND&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TIMOR-LESTE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TOGO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TONGA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TRINIDAD AND TOBAGO&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TUNISIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TÜRKIYE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TURKMENISTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TURKS AND CAICOS ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;TUVALU&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UGANDA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UKRAINE&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UNITED ARAB EMIRATES&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UNITED KINGDOM&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UNITED STATES OF AMERICA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UNITED STATES VIRGIN ISLANDS&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;URUGUAY&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;UZBEKISTAN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;VANUATU&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;VENEZUELA, BOLIVARIAN REPUBLIC OF&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;VIET NAM&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;YEMEN&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ZAMBIA&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;ZIMBABWE&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11hj7ci09dd2to111nbgj0uop3yv].[:Measure Names]</column>
            <column>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D7D419E7-730E-48C8-B980-9BA769F123F0}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='tourist_processed+' name='federated.11hj7ci09dd2to111nbgj0uop3yv' />
          </datasources>
          <datasource-dependencies datasource='federated.11hj7ci09dd2to111nbgj0uop3yv'>
            <column datatype='real' name='[2019]' role='measure' type='quantitative' />
            <column datatype='real' name='[2022]' role='measure' type='quantitative' />
            <column caption='Avg Arrivals' datatype='real' name='[Avg_Arrivals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Cost of Living Plus Rent Index]' role='measure' type='quantitative' />
            <column caption='Country (festivals processed.csv)' datatype='string' name='[Country (festivals_processed.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Groceries Index]' role='measure' type='quantitative' />
            <column caption='Impact Score' datatype='real' name='[Impact_Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Local Purchasing Power Index]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column-instance column='[Country (festivals_processed.csv)]' derivation='None' name='[none:Country (festivals_processed.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2019]' derivation='Sum' name='[sum:2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2022]' derivation='Sum' name='[sum:2022:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg_Arrivals]' derivation='Sum' name='[sum:Avg_Arrivals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost of Living Plus Rent Index]' derivation='Sum' name='[sum:Cost of Living Plus Rent Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Groceries Index]' derivation='Sum' name='[sum:Groceries Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Impact_Score]' derivation='Sum' name='[sum:Impact_Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local Purchasing Power Index]' derivation='Sum' name='[sum:Local Purchasing Power Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:2022:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Avg_Arrivals:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Cost of Living Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Cost of Living Plus Rent Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Groceries Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Impact_Score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Local Purchasing Power Index:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11hj7ci09dd2to111nbgj0uop3yv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Month:qk]</rows>
        <cols>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (festivals_processed.csv):nk]</cols>
      </table>
      <simple-id uuid='{87C07B78-0D7C-46CB-B4FE-F7671EF94BE7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='20'>Affordability Idex Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tourist_processed+' name='federated.11hj7ci09dd2to111nbgj0uop3yv' />
          </datasources>
          <datasource-dependencies datasource='federated.11hj7ci09dd2to111nbgj0uop3yv'>
            <column caption='Affordability Index' datatype='real' name='[Affordability_Index]' role='measure' type='quantitative' />
            <column caption='Country (cost processed.csv)' datatype='string' name='[Country (cost_processed.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country (cost_processed.csv)]' derivation='None' name='[none:Country (cost_processed.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Affordability_Index]' derivation='Sum' name='[sum:Affordability_Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Affordability_Index:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Affordability_Index:qk]' field-type='quantitative' max='21.227201858821623' min='0.1137337042779949' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</rows>
        <cols>[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Affordability_Index:qk]</cols>
      </table>
      <simple-id uuid='{41BF5528-9276-4323-B3BD-66288DD045A9}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>Pie Chart of Seasons</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tourist_processed+' name='federated.11hj7ci09dd2to111nbgj0uop3yv' />
          </datasources>
          <datasource-dependencies datasource='federated.11hj7ci09dd2to111nbgj0uop3yv'>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[Season]' derivation='Count' name='[cnt:Season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Season:nk]' />
              <wedge-size column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[cnt:Season:qk]' />
              <size column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[cnt:Season:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{75EF8279-E5ED-4332-8D53-886EF9B9C160}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>Count of Distinct Festival Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tourist_processed+' name='federated.11hj7ci09dd2to111nbgj0uop3yv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11hj7ci09dd2to111nbgj0uop3yv'>
            <column caption='Country (cost processed.csv)' datatype='string' name='[Country (cost_processed.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Festival Name' datatype='string' name='[Festival_Name]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Lat]' derivation='Avg' name='[avg:Lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Lat]' derivation='Avg' name='[avg:Lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lon]' derivation='Avg' name='[avg:Lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Festival_Name]' derivation='CountD' name='[ctd:Festival_Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (cost_processed.csv)]' derivation='None' name='[none:Country (cost_processed.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11hj7ci09dd2to111nbgj0uop3yv].[avg:Lon:qk]' field-type='quantitative' max='36869772.42664288' min='-23253442.901437756' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11hj7ci09dd2to111nbgj0uop3yv].[avg:Lat:qk]' field-type='quantitative' max='18885429.63124232' min='-10528698.00765918' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[ctd:Festival_Name:qk]' />
              <lod column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]' />
              <lod column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[avg:Lat:ok]' />
              <geometry column='[federated.11hj7ci09dd2to111nbgj0uop3yv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11hj7ci09dd2to111nbgj0uop3yv].[avg:Lat:qk]</rows>
        <cols>[federated.11hj7ci09dd2to111nbgj0uop3yv].[avg:Lon:qk]</cols>
      </table>
      <simple-id uuid='{000ADA49-5DE3-4CB3-AC0F-ED09BAAE2C03}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>Line Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tourist_processed+' name='federated.11hj7ci09dd2to111nbgj0uop3yv' />
          </datasources>
          <datasource-dependencies datasource='federated.11hj7ci09dd2to111nbgj0uop3yv'>
            <column caption='Affordability Index' datatype='real' name='[Affordability_Index]' role='measure' type='quantitative' />
            <column caption='Country (cost processed.csv)' datatype='string' name='[Country (cost_processed.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country (cost_processed.csv)]' derivation='None' name='[none:Country (cost_processed.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Affordability_Index]' derivation='Sum' name='[sum:Affordability_Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.11hj7ci09dd2to111nbgj0uop3yv].[sum:Affordability_Index:qk]</rows>
        <cols>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</cols>
      </table>
      <simple-id uuid='{2AEB7B30-519A-408E-9DE7-EC2465625C0E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='8' param='horz' type-v2='layout-flow' w='99150' x='425' y='993'>
            <zone h='98014' id='6' type-v2='layout-basic' w='90648' x='425' y='993' />
            <zone fixed-size='160' h='98014' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='8502' x='91073' y='993'>
              <zone h='16626' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Season:nk]' type-v2='color' w='8502' x='91073' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7321' id='10' name='Sheet 4' pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[cnt:Season:qk]' type-v2='size' w='8502' x='91073' y='17619'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37593' id='5' name='Sheet 4' w='45909' x='266' y='14516' />
        <zone h='44665' id='11' name='Sheet 6' w='46015' x='159' y='54839' />
        <zone h='42928' id='3' name='Sheet 3' w='41020' x='46918' y='55955' />
        <zone h='41811' id='12' name='Sheet 5' w='41180' x='46599' y='13896' />
        <zone forceUpdate='true' h='3722' id='14' type-v2='text' w='67003' x='21360' y='4218'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Times New Roman' fontsize='20'>Smart Tourism Prediction &amp; Analytics Dashboard</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='15' param='vert' type-v2='layout-flow' w='99150' x='425' y='993'>
                <zone forceUpdate='true' h='3722' id='14' type-v2='text' w='67003' x='21360' y='4218'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Times New Roman' fontsize='20'>Smart Tourism Prediction &amp; Analytics Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41811' id='12' is-fixed='true' name='Sheet 5' w='41180' x='46599' y='13896'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37593' id='5' is-fixed='true' name='Sheet 4' w='45909' x='266' y='14516'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16626' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Season:nk]' type-v2='color' w='8502' x='91073' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7321' id='10' name='Sheet 4' pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[cnt:Season:qk]' type-v2='size' w='8502' x='91073' y='17619'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44665' id='11' is-fixed='true' name='Sheet 6' w='46015' x='159' y='54839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42928' id='3' is-fixed='true' name='Sheet 3' w='41020' x='46918' y='55955'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{789C46FB-5670-47C6-8B62-5DE253BCE50F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Category:nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36965648-3D45-479D-BA88-CC6A20BEE177}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Category (festivals_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Category:nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (festivals_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country:nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Festival_Name:nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Month:qk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Report Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB3C69A3-838D-4CC2-9064-DFE13258051E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (festivals_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Festival_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9BC1C82-52FE-408C-BE9A-818C97FD231A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Season:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{F71C9D1B-A716-4377-9D8F-065AC52DC7C1}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Season:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[cnt:Season:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (festivals_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Festival_Name:nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE9EDC8F-1229-49FC-BA97-379747B5C70E}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11hj7ci09dd2to111nbgj0uop3yv].[ctd:Festival_Name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[cnt:Festival_Name:qk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:2000:ok]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</field>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Festival_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CC8CF1D-ABFC-4619-A17D-AE8F9399991A}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11hj7ci09dd2to111nbgj0uop3yv].[none:Country (cost_processed.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF45B5E5-7204-4957-A8AE-28712A3B8094}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='29' name='Sheet 1' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAdCAYAAAAaeWr3AAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAAVElEQVRYhe3QQREAIAzAMMC/5yEjjzUKer0zM2expwO0BugArQE6QGuADtAaoAO0BugA
      rQE6QGuADtAaoAO0BugArQE6QGuADtAaoAO0BugAbf2AD2X1BDZFx3ZgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      C2FCnJT/AGsQRoUVyfQtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Sheet 4' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAHiklEQVR4nO3dT29UVRzG8afT6T8GpkxghmQompYVY42GpKlsaNIuWEJCTWTtBtjwAlAW
      Rl4AKySauNQY+gasNIGYKAaIkaYCqXTRYGRGOoBMB7B0XJRbBzod5s+99zzn3OeTGKWGmbP4
      5nfuuXPbdlQqlQpESMRML0CkmoIUKgpSqChIoaIghYqCFCoKUqgoSKGiIIWKghQqClKoKEih
      oiCFioIUKgpSqChIoaIghYqCFCoKUqgoSKGiIIWKghQqClKoKEihoiCFioIUKgpSqChIoaIg
      hYqCFCoKUqgoSKGiIIWKghQqClKoKEihoiCFioIUKgpSqChIoaIghYqCFCoKUqgoSKGiIIWK
      ghQqClKoxE0vwGbF8jKK5TKK5WUAwB9LDzZ8fekmkNmeQCa19g8A7EolkNmewPBQxtjaWXXo
      F7g3p1hext2lB7h2bxF3XwZYz60rpbr/f3gwg+GhDI5NDPu1RKspyAYUy8vrATYSYbU3BVkt
      k0pgfP8g3n0ZaRQpyDqu31vE9Pyd9S25Fc0EWS2TSuDYxDDG9w+2/N42UpA1FMvL+O7mr01P
      w1paDdKTSSVw6uhoZCamgqxSLC9jev4Ort9b9O012w3SMzyYwanJ0fWDkasUJP6/Rvxh/o7v
      r+1XkJ6PJoadPgBFPshieRkXfvmprevEevwOEnB7G490kNPztwOZitWCCNJzanLUuUNPJIMM
      cot+XZBBAsD4/kGcmhwN9D3CFLmPDr2DSxgxhmHmxgJOfzljehm+idSEDPp6sZagJ6THlevK
      yExIEzGGKV8s4dzUVdPLaFskgvRudLsaoydfLFm/fUciyEYfhHDB7EIe31yaNb2Mljkf5PWQ
      TtNMvr00i9m7edPLaInTQXpbdRSd/mrGyiidDdI7xETZuamryBfDOeX7xdkg231szAX5Ysm6
      60kngyyWl319YsdmMzcWrNq6nQwyqteNm7FpSjoXZCvfZuC62YW8NVPSuSCn52+bXgIlW6ak
      U0FqOm7OlinpVJCajvXZ8Fm3M0F63y8tm8sXS/T3JZ0J8ppu8zTk0o0F00uoy5kgNR0bw34d
      6USQ2q4bN7uQp962nQhSMTZndoF3SjoRpK4fm3OTeNu2Pkht182bIT7YOBBk2fQSrMR6uHEg
      yGg/Ytaq/EPOg431QS4pyJbcJz1pWx+ktIb11o/1Qeoa0i0OBKktuxWsE9L638IQtQm5s/Ph
      +n+nY48a+1rny6/FHq7/ORbLAhgPerlNcyBI7gnZTkDAqxH5afXxn76+nl+sDzLVtyXUKLc9
      KSH5pIRtT0rY/df9l//e/J5eavS30NbWjFgya3oJNTkQZF8gQTYbnm06krtNL6EmB4LcAqD1
      jw5dD8821gfZKIX3qs6BEdNLqMn6IFN9fa/8uTo0hWcf64N8+0UFEz/+TBve6rNuxHqem17G
      BrF+HWoC8daLVfTO8z5OtfI4ge40YZCkhxrrP6npzeVML6Guf//ZanoJG8SSWdprSOuDBIDE
      2EHTS9jU6rMu00vYgPWWD+BIkMxTcuUx34RknY6AI0EyT0hg7WDDJL5HQQYunk6bXsKmVh7z
      /AZX5utHwKEgmack08Emnjtiegl1ORMk84RkwrxdAw4FmRg7iJ7cPtPLqOl5IWV6CQD4t2vA
      oSABYOvYmOklbIrhYNN76KzpJbyRU0EyT0nTBxsbpiPgWJAA0D951PQSajJ9sLFhOgIOBtmb
      y9FOSVM6B0asmI6Ag0ECnFPS5MGm58BJY+/dLCeD7M3lKO9LmjjYdOUOWzMdAUeDBDinZNgH
      m1gyi26LpiPgcJDxdBqZM5+YXsYrXoQ4IWPJLHoPnaV97nEzzgYJrG3dTFGuPg8vyHjuiFVb
      tcfpIAGu68mwDjZducNWHWSqOR8kAOw4cZzmVlDQB5vOgRFr7jnWEokgAWDXmU8pogzyCfJY
      MostH34d2OuHITJBAmuT0vRTQUFNyFgyiz7LYwQiFqR38jY5KYP4CDGWzCLx8ffWnahr6ahU
      KhXTizDh0cUpPLo4Ffr7xpNPsG3fXd9er/uDk9YeYGqJ1ISs1j95FDtOHA/9ff36pq9YMutc
      jIADPyigHYmxg+hM70T+s89Dfd92f5qFd9PbxvuMbxLZLbvaSqGA0uUroW3hiaFFdKeLLf3d
      rtxhdB846cT1Yi0KsspKoYAH57/As7nfA32f7nQRiaHmfh1e58AIeg6cdHIqVlOQNQQdZjMH
      G5e351oUZB1P5+awdP4CVgoF31/7TT/q2XtSp4v821b9piAb4F1jli5f8S3O/vdvbTjYxJJZ
      xHNHEN9jzxPeflOQTfLifDo319aWnhhaRO/ePnQkd6PrnbWHaF09qDRDQbZhpVDASqGAF4W/
      1yfn61+Lp9PoTO9c/8jS+8FY3QP96Nr7nrG1s1KQQiWyn9QIJwUpVBSkUFGQQkVBChUFKVQU
      pFBRkEJFQQoVBSlUFKRQUZBCRUEKFQUpVBSkUFGQQkVBChUFKVQUpFBRkEJFQQoVBSlUFKRQ
      UZBCRUEKFQUpVBSkUFGQQkVBChUFKVQUpFBRkEJFQQoVBSlUFKRQUZBC5T/X9t9C8zeaDwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      4I1OAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
